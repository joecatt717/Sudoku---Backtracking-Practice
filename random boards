import random
print(random.randint(1,9))

def print_board(board):
    for i in range(len(board)):
        if i % 3 == 0 and i != 0:
            print("-----------------------")

        for j in range(len(board[0])):
            if j % 3 == 0 and j != 0:
                print(" | ", end="")

            if j == 8:
                print(board[i][j])
            else:
                print(str(board[i][j]) + " ", end="")
                
                
def valid(board, num, pos):
    #check if row is valid
    for i in range(len(board[0])):
        #check if each value in the row is equal to the input num, except for the value that we just input
        if board[pos[0]][i] == num and pos[1] != i:
            return False
        
    for j in range(len(board)):
        if board[j][pos[1]] == num and pos[0] != j:
            return False
        
    # check the 3x3 box if it is repeating a value
    box_x = pos[1] // 3
    box_y = pos[0] // 3
    
    for i in range(box_y * 3, box_y * 3 + 3):
        for j in range(box_x *3, box_x * 3 + 3):
            if board[i][j] == num and (i,j) != pos:
                return False
            
    return True
    
    
def give_hints(fresh_board):
    
    hint_count = 0
    #hint_count decides difficulty
    #17 is minimum (crazy hard)
    #22 is hard, 28 is med, 36 is easy mode
    # - need to code in a way to validate that no row, col, or box is full
    # it is unlikely to be true, but could potentially happen as is
    while hint_count < 36:
        
        row = random.randint(0,8)
        col = random.randint(0,8)
        val = random.randint(1,9)
        
        if fresh_board[row][col] == 0:
                     
            while valid(fresh_board, val, (row, col)) == False:
                val = random.randint(1,9)
                
            else:
                fresh_board[row][col] = val
                hint_count += 1
                
                
give_hints(fresh_board)
print_board(fresh_board)
